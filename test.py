from __future__ import annotations
from datetime import date, datetime
from enum import Enum


from bson.objectid import ObjectId as BsonObjectId
from typing import Annotated, List, Union, Optional, Type, Tuple
import inspect
import json
from pydantic import BaseModel, SecretStr, Field, validator, create_model, EmailStr
from pydantic.class_validators import root_validator
from fastapi import Form
import uuid
from re import findall
from app.models.iemap import newProject


def get_uuid():
    return str(uuid.uuid4())


class newProject(BaseModel):
    identifier: Optional[str]
    project_name: str
    iemap_id: str = None
    test: str = Field(default_factory=get_uuid)

    @validator("iemap_id", pre=True, always=True)
    def set_id(cls, v):
        return v or "iemap-" + str(uuid.uuid4())[:6]


from app.models.iemap import newProject

npJSON = {
    "project": {"name": "Materials for Batteries", "label": "MB"},
    "material": {
        "formula": "Mn12Na12O24",
        # "input": {
        #     "species": [
        #         "Na",
        #         "Na",
        #         "Mn",
        #         "Mn",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "Na",
        #         "Na",
        #         "Mn",
        #         "Mn",
        #         "O",
        #         "O",
        #         "Mn",
        #         "Mn",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "Na",
        #         "Na",
        #         "Na",
        #         "Na",
        #         "O",
        #         "O",
        #         "Na",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Na",
        #         "Na",
        #         "Na",
        #     ],
        #     "sites": [
        #         [0.0, 1.789, 8.174],
        #         [1.549, 0.894, 2.725],
        #         [0.0, 0.0, 0.0],
        #         [0.0, 0.0, 5.449],
        #         [1.549, 0.894, -0.954],
        #         [0.0, 1.789, 4.495],
        #         [0.0, 1.789, 0.954],
        #         [1.549, 0.894, 6.403],
        #         [6.197, 1.789, 8.174],
        #         [7.747, 0.894, 2.725],
        #         [6.197, 0.0, 0.0],
        #         [6.197, 0.0, 5.449],
        #         [6.197, 1.789, 0.954],
        #         [7.747, 0.894, 6.403],
        #         [3.099, 0.0, 0.0],
        #         [3.099, 0.0, 5.449],
        #         [4.648, 0.894, -0.954],
        #         [3.099, 1.789, 4.495],
        #         [3.099, 1.789, 0.954],
        #         [4.648, 0.894, 6.403],
        #         [7.747, 0.894, -0.954],
        #         [6.197, 1.789, 4.495],
        #         [3.099, 1.789, 8.174],
        #         [4.648, 0.894, 2.725],
        #         [4.648, 4.472, 8.174],
        #         [6.197, 3.578, 2.725],
        #         [4.648, 4.472, 0.954],
        #         [6.197, 3.578, 6.403],
        #         [-1.549, 4.472, 8.174],
        #         [-1.549, 4.472, 0.954],
        #         [3.099, 3.578, -0.954],
        #         [1.549, 4.472, 4.495],
        #         [1.549, 4.472, 0.954],
        #         [3.099, 3.578, 6.403],
        #         [6.197, 3.578, -0.954],
        #         [4.648, 4.472, 4.495],
        #         [0.0, 3.578, -0.954],
        #         [-1.549, 4.472, 4.495],
        #         [0.0, 3.578, 6.403],
        #         [4.648, 2.683, 0.0],
        #         [4.648, 2.683, 5.449],
        #         [-1.549, 2.683, 0.0],
        #         [-1.549, 2.683, 5.449],
        #         [1.549, 2.683, 0.0],
        #         [1.549, 2.683, 5.449],
        #         [0.0, 3.578, 2.725],
        #         [1.549, 4.472, 8.174],
        #         [3.099, 3.578, 2.725],
        #     ],
        #     "cell": [[9.2958, 0.0, 0.0], [-3.0986, 5.3669, 0.0], [0.0, 0.0, 10.8981]],
        # },
        # "output": {
        #     "species": [
        #         "Na",
        #         "Na",
        #         "Mn",
        #         "Mn",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "Na",
        #         "Na",
        #         "Mn",
        #         "Mn",
        #         "O",
        #         "O",
        #         "Mn",
        #         "Mn",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "Na",
        #         "Na",
        #         "Na",
        #         "Na",
        #         "O",
        #         "O",
        #         "Na",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "O",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Mn",
        #         "Na",
        #         "Na",
        #         "Na",
        #     ],
        #     "sites": [
        #         [0.29012058971109, 1.856714785385, 8.1917149194858],
        #         [1.4946370018321, 0.8667285666337, 2.731030456852],
        #         [0.00022928874569733, 6.1413873543296e-05, -7.9677140708157e-06],
        #         [0.00041442019490959, 0.00022010878665536, 5.4613774456135],
        #         [1.9196327474639, 1.1101666229608, -1.1231686513938],
        #         [-0.13454653636699, 1.6132770338271, 4.337820419147],
        #         [-0.13449742566904, 1.6132394068402, 1.1234141466571],
        #         [1.9191300552299, 1.1098425231581, 6.5844746870021],
        #         [6.7914033889225, 2.2344536004069, 8.1918903860834],
        #         [7.9959527136141, 1.2448173716194, 2.7305655663174],
        #         [6.5012457088476, 0.37752796625386, 0.00010085592780582],
        #         [6.5012007281656, 0.37752235675486, 5.4611866177689],
        #         [6.3665522792047, 1.9908136078787, 1.1233576518226],
        #         [8.4208154013209, 1.4881979687364, 6.5845073954023],
        #         [3.2507339499186, 0.18867589292185, 0.00018158299685709],
        #         [3.2503970874909, 0.1884488498552, 5.4612098768496],
        #         [5.1702092869213, 1.2990123465074, -1.1232453118359],
        #         [3.1155996202988, 1.8015874428124, 4.3378588647497],
        #         [3.116267781594, 1.8019822288016, 1.1233242778202],
        #         [5.1698468912452, 1.2988084863827, 6.5844034424913],
        #         [8.4206668496357, 1.4880943127014, -1.1231813995851],
        #         [6.366600596142, 1.9908682320895, 4.3378881953571],
        #         [3.5409514981268, 2.0449903926251, 8.1921515276723],
        #         [4.7452084104311, 1.0552231596321, 2.7305596835038],
        #         [5.325715593831, 4.7691353809289, 8.1919011295425],
        #         [6.5299436056289, 3.7795087308465, 2.7305464842412],
        #         [4.9008545225325, 4.5255219377349, 1.1233083638601],
        #         [6.9551060656111, 4.022932216052, 6.584507177773],
        #         [-1.1754873882203, 4.3913694926763, 8.1917452052186],
        #         [-1.6000086824286, 4.1481060490392, 1.1232918102023],
        #         [3.7044020747033, 3.8336588794805, -1.1232191130896],
        #         [1.6499035107765, 4.3363653976726, 4.3378885773683],
        #         [1.6504961182312, 4.336725077907, 1.1233491610277],
        #         [3.7039838279498, 3.8334367712795, 6.5843521478294],
        #         [6.954967917509, 4.0228231999018, -1.1231577812698],
        #         [4.9008219270614, 4.5255487470935, 4.3379034524277],
        #         [0.45396436421144, 3.6449306236848, -1.123207177437],
        #         [-1.60008556855, 4.1481172683176, 4.3379290411485],
        #         [0.4534924683134, 3.6446082551928, 6.5845248866645],
        #         [5.0354727687079, 2.9122159301749, 0.00013125667124297],
        #         [5.0354547733495, 2.9122304154989, 5.4611807241362],
        #         [-1.4655854439266, 2.5347105999267, 8.765653174497e-05],
        #         [-1.4654269066561, 2.5348518348381, 5.4612813417668],
        #         [1.7851158364434, 2.7234681028707, 8.956693887665e-05],
        #         [1.784794135861, 2.7232354991111, 5.4613032582885],
        #         [0.029043657316345, 3.4016473391804, 2.7310320112598],
        #         [2.0748432647309, 4.5796039754011, 8.1921368441723],
        #         [3.279523315233, 3.5900100374948, 2.7305978417639],
        #     ],
        #     "cell": [
        #         [9.7517103869786, 0.56666989530273, 3.7593287052386e-05],
        #         [-2.9314940589645, 5.0694382588873, 9.8770275561681e-06],
        #         [8.4415157861055e-05, 4.0808959938701e-05, 10.922224942251],
        #     ],
        # },
    },
    "process": {
        "method": "dft",
        "agent": {"name": "Quantum Espresso", "version": "6.7"},
        "isExperiment": False,
    },
    "parameters": [
        {"name": "calculation", "value": "vc-relax"},
        {"name": "exchange_correlation", "value": "pbe"},
    ],
    "properties": [
        {"name": "volume", "value": 558.09165166256},
        {"name": "number_of_atoms", "value": 48},
        {"name": "number_of_electrons", "value": 432.0},
        {"name": "total_energy", "value": -61347.839300087},
        {"name": "formation_energy_per_atom", "value": -1.7093197766118162},
        {"name": "energy_gap", "value": -5.395112207618499},
        {"name": "fermi_energy", "value": 7.743},
        {"name": "absolute_magnetization", "value": 51.79},
        {"name": "total_magnetization", "value": 48.0},
    ],
}


if __name__ == "__main__":
    np = newProject(**npJSON)
    print(np.material.input.cell)


# if __name__ == "__main__":
#     c1 = newProject(project_name="test1")
#     print(c1.iemap_id)
#     c2 = newProject(project_name="test2")
#     print(c2.iemap_id)
